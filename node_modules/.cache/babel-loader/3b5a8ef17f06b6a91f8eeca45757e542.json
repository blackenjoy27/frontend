{"ast":null,"code":"var _jsxFileName = \"/Users/xli9400/Documents/Unit3/buildweek/potluck/src/components/PotluckList.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Potluck from \"../components/Potluck\";\nimport { EventsContainer } from \"./StyledComponents\";\nimport { useHistory } from \"react-router-dom\";\nimport { axiosWithAuth } from \"../helps/axiosWithAuth\";\nimport { editEvent, getEvents } from \"../actions\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PotluckList = props => {\n  _s();\n\n  const {\n    push\n  } = useHistory();\n\n  const cancelEvent = id => {\n    axiosWithAuth().delete(`/api/events/${id}`).then(res => {\n      console.log(\"reach\");\n      props.dispatch(getEvents());\n    });\n  };\n\n  const edit = event => {\n    //change the editing event property inside the redux state\n    props.dispatch(editEvent(event));\n    push(\"/protected/create\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(EventsContainer, {\n    children: props.events.map(event => {\n      return /*#__PURE__*/_jsxDEV(Potluck, {\n        event: event,\n        push: push,\n        all: props.all,\n        cancelEvent: cancelEvent,\n        edit: edit\n      }, event.event_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 28\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 13\n  }, this);\n};\n\n_s(PotluckList, \"9JfH1GuYu+ZbU2wrj13eQCg5IpE=\", false, function () {\n  return [useHistory];\n});\n\n_c = PotluckList;\nexport default connect()(PotluckList);\n\nvar _c;\n\n$RefreshReg$(_c, \"PotluckList\");","map":{"version":3,"sources":["/Users/xli9400/Documents/Unit3/buildweek/potluck/src/components/PotluckList.js"],"names":["React","Potluck","EventsContainer","useHistory","axiosWithAuth","editEvent","getEvents","connect","PotluckList","props","push","cancelEvent","id","delete","then","res","console","log","dispatch","edit","event","events","map","all","event_id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAAQC,eAAR,QAA8B,oBAA9B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAAQC,SAAR,EAAkBC,SAAlB,QAAkC,YAAlC;AACA,SAAQC,OAAR,QAAsB,aAAtB;;;AAMA,MAAMC,WAAW,GAAIC,KAAD,IAAU;AAAA;;AAC1B,QAAM;AAACC,IAAAA;AAAD,MAASP,UAAU,EAAzB;;AAEA,QAAMQ,WAAW,GAAIC,EAAD,IAAM;AACtBR,IAAAA,aAAa,GAAGS,MAAhB,CAAwB,eAAcD,EAAG,EAAzC,EACCE,IADD,CACMC,GAAG,IAAE;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAR,MAAAA,KAAK,CAACS,QAAN,CAAeZ,SAAS,EAAxB;AACH,KAJD;AAKH,GAND;;AAOA,QAAMa,IAAI,GAAIC,KAAD,IAAS;AAClB;AACAX,IAAAA,KAAK,CAACS,QAAN,CAAeb,SAAS,CAACe,KAAD,CAAxB;AACAV,IAAAA,IAAI,CAAC,mBAAD,CAAJ;AACH,GAJD;;AAMA,sBACQ,QAAC,eAAD;AAAA,cACKD,KAAK,CAACY,MAAN,CAAaC,GAAb,CAAiBF,KAAK,IAAE;AACrB,0BAAO,QAAC,OAAD;AAA8B,QAAA,KAAK,EAAEA,KAArC;AAA4C,QAAA,IAAI,EAAEV,IAAlD;AAAwD,QAAA,GAAG,EAAED,KAAK,CAACc,GAAnE;AAAwE,QAAA,WAAW,EAAEZ,WAArF;AAAkG,QAAA,IAAI,EAAEQ;AAAxG,SAAcC,KAAK,CAACI,QAApB;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFA;AADL;AAAA;AAAA;AAAA;AAAA,UADR;AAQH,CAxBD;;GAAMhB,W;UACaL,U;;;KADbK,W;AAyBN,eAAeD,OAAO,GAAGC,WAAH,CAAtB","sourcesContent":["import React from \"react\";\n\nimport Potluck from \"../components/Potluck\";\nimport {EventsContainer} from \"./StyledComponents\";\nimport {useHistory} from \"react-router-dom\";\nimport { axiosWithAuth } from \"../helps/axiosWithAuth\";\nimport {editEvent,getEvents} from \"../actions\";\nimport {connect} from \"react-redux\";\n\n\n\n\n\nconst PotluckList = (props) =>{\n    const {push} = useHistory();\n    \n    const cancelEvent = (id)=>{\n        axiosWithAuth().delete(`/api/events/${id}`)\n        .then(res=>{\n            console.log(\"reach\");\n            props.dispatch(getEvents());\n        })\n    }\n    const edit = (event)=>{\n        //change the editing event property inside the redux state\n        props.dispatch(editEvent(event));\n        push(\"/protected/create\");\n    }\n\n    return(\n            <EventsContainer>\n                {props.events.map(event=>{\n                    return <Potluck key={event.event_id} event={event} push={push} all={props.all} cancelEvent={cancelEvent} edit={edit}/>\n                })}\n            </EventsContainer>\n    )\n    \n}\nexport default connect()(PotluckList);"]},"metadata":{},"sourceType":"module"}