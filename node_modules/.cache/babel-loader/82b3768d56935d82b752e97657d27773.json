{"ast":null,"code":"var _jsxFileName = \"/Users/xli9400/Desktop/frontend/src/components/PrivateRoute.js\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      const token = localStorage.getItem(\"token\");\n\n      if (token) {\n        return /*#__PURE__*/_jsxDEV(Component, { ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 28\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 28\n        }, this);\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 12\n  }, this);\n};\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/xli9400/Desktop/frontend/src/components/PrivateRoute.js"],"names":["React","Route","Redirect","PrivateRoute","component","Component","rest","props","token","localStorage","getItem"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAQC,KAAR,EAAeC,QAAf,QAA8B,kBAA9B;;;AAGA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,SAAS,EAACC,SAAX;AAAqB,KAAGC;AAAxB,CAAD,KAAiC;AAClD,sBAAO,QAAC,KAAD,OAAWA,IAAX;AAAiB,IAAA,MAAM,EAAIC,KAAK,IAAE;AAC7B,YAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AACA,UAAGF,KAAH,EAAS;AACL,4BAAO,QAAC,SAAD,OAAeD;AAAf;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFD,MAGI;AACA,4BAAO,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH;AACJ;AARF;AAAA;AAAA;AAAA;AAAA,UAAP;AAUH,CAXD;;KAAMJ,Y;AAaN,eAAeA,YAAf","sourcesContent":["\nimport React from \"react\";\n\nimport {Route, Redirect} from \"react-router-dom\";\n\n\nconst PrivateRoute = ({component:Component,...rest})=>{\n    return <Route {...rest} render={  props=>{\n                const token = localStorage.getItem(\"token\");\n                if(token){\n                    return <Component {...props} />\n                }\n                else{\n                    return <Redirect to=\"/\"/>\n                }\n            }}\n    />\n}\n\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}