{"ast":null,"code":"import { axiosWithAuth } from \"../helps/axiosWithAuth\";\nexport const LOGIN = \"LOGIN\";\nexport const ADD_EVENT = \"ADD_EVENT\";\nexport const LOG_OUT = \"LOG_OUT\";\nexport const LOAD_EVENTS = \"LOAD_EVENTS\";\nexport const RESTORE_DATA = \"RESTORE_DATA\";\nexport const CREATING_NEW_EVENT = \"CREATING_NEW_EVENT\";\nexport const EDIT_EVENT = \"EDIT_EVENT\";\nexport const DONE_EDIT_EVENT = \"DONE_EDIT_EVENT\";\nexport const restoreData = backup => {\n  return {\n    type: RESTORE_DATA,\n    payload: backup\n  };\n};\nexport const login = (id, events, username) => {\n  return dispatch => {\n    dispatch({\n      type: LOGIN,\n      payload: id,\n      userName: username\n    });\n    dispatch({\n      type: LOAD_EVENTS,\n      payload: events\n    });\n  };\n};\nexport const getEvents = () => {\n  return dispatch => {\n    axiosWithAuth().get(\"/api/events/getall\").then(res => {\n      dispatch({\n        type: LOAD_EVENTS,\n        payload: res.data\n      });\n    });\n  };\n};\nexport const addEvent = event => {\n  return dispatch => {\n    axiosWithAuth().post(\"/api/events\", event).then(res => {\n      dispatch({\n        type: ADD_EVENT,\n        payload: res.data\n      });\n      dispatch({\n        type: CREATING_NEW_EVENT,\n        payload: res.data.event_id\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n};\nexport const editEvent = event => {\n  return {\n    type: EDIT_EVENT,\n    payload: event\n  };\n};\nexport const finishEditEvent = () => {\n  return {\n    type: DONE_EDIT_EVENT\n  };\n};\nexport const reset = e => {\n  return {\n    type: LOG_OUT\n  };\n};","map":{"version":3,"sources":["/Users/xli9400/Documents/Unit3/buildweek/potluck/src/actions/index.js"],"names":["axiosWithAuth","LOGIN","ADD_EVENT","LOG_OUT","LOAD_EVENTS","RESTORE_DATA","CREATING_NEW_EVENT","EDIT_EVENT","DONE_EDIT_EVENT","restoreData","backup","type","payload","login","id","events","username","dispatch","userName","getEvents","get","then","res","data","addEvent","event","post","event_id","catch","error","console","log","editEvent","finishEditEvent","reset","e"],"mappings":"AAAA,SAAQA,aAAR,QAA4B,wBAA5B;AACA,OAAO,MAAMC,KAAK,GAAG,OAAd;AACP,OAAO,MAAMC,SAAS,GAAG,WAAlB;AACP,OAAO,MAAMC,OAAO,GAAG,SAAhB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,UAAU,GAAG,YAAnB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,MAAMC,WAAW,GAAIC,MAAD,IAAU;AACjC,SAAO;AAACC,IAAAA,IAAI,EAACN,YAAN;AAAoBO,IAAAA,OAAO,EAAEF;AAA7B,GAAP;AACH,CAFM;AAIP,OAAO,MAAMG,KAAK,GAAG,CAACC,EAAD,EAAIC,MAAJ,EAAWC,QAAX,KAAwB;AACzC,SAAOC,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAAC;AAACN,MAAAA,IAAI,EAACV,KAAN;AAAaW,MAAAA,OAAO,EAACE,EAArB;AAAyBI,MAAAA,QAAQ,EAAEF;AAAnC,KAAD,CAAR;AACAC,IAAAA,QAAQ,CAAC;AAACN,MAAAA,IAAI,EAACP,WAAN;AAAmBQ,MAAAA,OAAO,EAAEG;AAA5B,KAAD,CAAR;AACF,GAHD;AAIH,CALM;AAOP,OAAO,MAAMI,SAAS,GAAG,MAAM;AAC3B,SAAQF,QAAD,IAAc;AACjBjB,IAAAA,aAAa,GACRoB,GADL,CACS,oBADT,EAEKC,IAFL,CAEUC,GAAG,IAAI;AACTL,MAAAA,QAAQ,CAAC;AAAEN,QAAAA,IAAI,EAAEP,WAAR;AAAqBQ,QAAAA,OAAO,EAAEU,GAAG,CAACC;AAAlC,OAAD,CAAR;AACH,KAJL;AAMH,GAPD;AAQH,CATM;AAWP,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAAU;AAC9B,SAAQR,QAAD,IAAY;AACfjB,IAAAA,aAAa,GAAG0B,IAAhB,CAAqB,aAArB,EAAoCD,KAApC,EACCJ,IADD,CACMC,GAAG,IAAE;AACPL,MAAAA,QAAQ,CAAC;AAACN,QAAAA,IAAI,EAAET,SAAP;AAAkBU,QAAAA,OAAO,EAACU,GAAG,CAACC;AAA9B,OAAD,CAAR;AACAN,MAAAA,QAAQ,CAAC;AAACN,QAAAA,IAAI,EAACL,kBAAN;AAA0BM,QAAAA,OAAO,EAAEU,GAAG,CAACC,IAAJ,CAASI;AAA5C,OAAD,CAAR;AACH,KAJD,EAKCC,KALD,CAKOC,KAAK,IAAE;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAPD;AAQH,GATD;AAUH,CAXM;AAaP,OAAO,MAAMG,SAAS,GAAIP,KAAD,IAAS;AAC9B,SAAO;AAACd,IAAAA,IAAI,EAACJ,UAAN;AAAkBK,IAAAA,OAAO,EAAEa;AAA3B,GAAP;AACH,CAFM;AAIP,OAAO,MAAMQ,eAAe,GAAG,MAAI;AAC/B,SAAO;AAACtB,IAAAA,IAAI,EAACH;AAAN,GAAP;AACH,CAFM;AAIP,OAAO,MAAM0B,KAAK,GAAGC,CAAC,IAAE;AACpB,SAAO;AAACxB,IAAAA,IAAI,EAACR;AAAN,GAAP;AACH,CAFM","sourcesContent":["import {axiosWithAuth} from \"../helps/axiosWithAuth\";\nexport const LOGIN = \"LOGIN\";\nexport const ADD_EVENT = \"ADD_EVENT\";\nexport const LOG_OUT = \"LOG_OUT\";\nexport const LOAD_EVENTS = \"LOAD_EVENTS\";\nexport const RESTORE_DATA = \"RESTORE_DATA\";\nexport const CREATING_NEW_EVENT = \"CREATING_NEW_EVENT\";\nexport const EDIT_EVENT = \"EDIT_EVENT\";\nexport const DONE_EDIT_EVENT = \"DONE_EDIT_EVENT\";\n\nexport const restoreData = (backup)=>{\n    return {type:RESTORE_DATA, payload: backup}\n}\n\nexport const login = (id,events,username) => {\n    return(dispatch) => {\n       dispatch({type:LOGIN, payload:id, userName: username});\n       dispatch({type:LOAD_EVENTS, payload: events});\n    }\n}\n\nexport const getEvents = () => {\n    return (dispatch) => {\n        axiosWithAuth()\n            .get(\"/api/events/getall\")\n            .then(res => {\n                dispatch({ type: LOAD_EVENTS, payload: res.data })\n            })\n            ;\n    }\n}\n\nexport const addEvent = (event) =>{\n    return (dispatch)=>{\n        axiosWithAuth().post(\"/api/events\", event)\n        .then(res=>{\n            dispatch({type: ADD_EVENT, payload:res.data});\n            dispatch({type:CREATING_NEW_EVENT, payload: res.data.event_id});\n        })\n        .catch(error=>{\n            console.log(error);\n        })\n    }\n}\n\nexport const editEvent = (event)=>{\n    return {type:EDIT_EVENT, payload: event}\n}\n\nexport const finishEditEvent = ()=>{\n    return {type:DONE_EDIT_EVENT}\n}\n\nexport const reset = e=>{\n    return {type:LOG_OUT};\n}"]},"metadata":{},"sourceType":"module"}